---
title: "Inferring causal effect of marketing on sales"
format: 
  html: 
    embed-resources: true
---

## 개요

Kaggle 웹사이트에 올라온 `{CausalImpact}` 패키지 사용 예를 살펴보고, 추가적인 분석을 논의하고자 한다.

Kaggle 분석 포스팅

- https://www.kaggle.com/code/chrisbow/inferring-causal-effect-of-marketing-on-sales/notebook 

해당 인과분석은 여러 department의 판매 시계열을 이용하여 특정 department의 마케팅 효과를 분석하는 예를 보여준다. 마케팅 효과와 관련해서는 실제 데이터는 아니고, 포스팅의 저자가 인위적으로 마케팅 효과를 generation한 데이터이다.


## 데이터

데이터 파일 *sales data-set.csv*는 Kaggle 웹사이트에서 다운로드 받을 수 있다.
https://www.kaggle.com/code/chrisbow/inferring-causal-effect-of-marketing-on-sales/input?select=sales+data-set.csv

```{r}
#| message: false
#| warning: false
library(tidyverse)
library(tsibble)
library(xts)
library(CausalImpact)
library(skimr)
```

```{r}
sales_df <- 
  read_csv("datasets/sales data-set.csv") |> 
  mutate(Date = dmy(Date))

head(sales_df)

skim(sales_df)
```

- `Store`: 상점 고유 ID
- `Dept`: Department 고유 ID
- `Date`: 판매 일자 (1주일 간격)
- `Weekly_Sales`: 주간 판매 실적
- `IsHoliday`: Holiday 시즌 여부

시계열 데이터로 변환하자.

```{r}
sales_ts <- 
  sales_df |> 
  as_tsibble(key = c(Store, Dept), index = Date)

sales_ts
```

이 중 Store 1의 Department 1 ~ 4까지의 판매 시계열만 살펴보자.

```{r}
sales_trimmed <- 
  sales_ts |> 
  filter(
    Store == 1,
    Dept %in% 1:4
  ) |> 
  select(-IsHoliday)

sales_trimmed
```

## 데이터 생성

2012년 3월 한 달 동안 Dept 4에 마케팅 캠패인이 있었고, 이로 인해 해당 기간동안 매출이 30% 증가했다고 가정하여 데이터를 수정해보자.

```{r}
sales_adj <- 
  sales_trimmed |> 
  mutate(marketing_campaign = (Dept == 4 & yearmonth(Date) == yearmonth("2012-03"))) |> 
  mutate(adj_sales = Weekly_Sales * (1 + 0.3 * marketing_campaign))
```


```{r}
sales_adj |> 
  filter(Dept == 4) |> 
  ggplot(aes(x = Date)) + 
  geom_line(aes(y = Weekly_Sales), linetype = "dashed") + 
  geom_line(aes(y = adj_sales), linetype = "solid")
```


## `{CausalImpact}` 패키지 사용

데이터 프레임을 다음과 같이 정돈한다.

- Wide 형태의 데이터 프레임으로 변환한다. 
- 첫 번째 열은 treatment가 적용된 time series를 나타낸다.
- 나머지 열은 treatment에 영향을 받지 않은 covariates를 나타낸다.
- `zoo` 클래스 객체로 변환한다. 행 인덱스를 날짜로 지정한다. 

```{r}
sales_adj_wide <- 
  sales_adj |> 
  as_tibble() |> 
  pivot_wider(
    id_cols = Date,
    names_from = c(Store, Dept),
    names_prefix = "sales_",
    values_from = adj_sales
  )

sales_adj_zoo <- 
  sales_adj_wide |> 
  select(sales_1_4, !Date) |> 
  zoo(order.by = sales_adj_wide[["Date"]])
```


Pre-treatment period와 post-treatment period를 구분한다.

```{r}
observed_date <- 
  sales_adj |> 
    pull(Date) |> 
    sort()

first_treatment_date <- 
  sales_adj |> 
    filter(marketing_campaign == TRUE) |> 
    slice_min(order_by = Date, n = 1) |> 
    pull(Date)

print(first_treatment_date)

pre_period <- range(observed_date[observed_date < first_treatment_date])
post_period <- range(observed_date[observed_date >= first_treatment_date])
```

`CausalImpact()` 함수를 call하여 causal effect를 추정하자.

```{r}
impact <- CausalImpact(sales_adj_zoo, pre_period, post_period)
```


```{r}
plot(impact)
```

2012년 3월 한 달 동안 causal effect가 유의하게 추정되었다.

다만, 3월 이후에도 cumulative effect가 조금씩 증가하는 것으로 나타나는데, 이는 pre-period에서 관측된 데이터를 사용해 구성한 synthetic control이 먼 미래에도 유용한 synthetic control은 아닐 수 있음을 시사하는 것일 수 있다.

또한, pre-period에도 일부 구간에서 pointwise causal effect가 유의하게 나타나는 부분은 synthetic control이 관심 시계열의 일부 패턴(계절성 등)을 잘 반영하지 못할 수 있음을 보여준다.

Synthetic control 모델의 회귀계수를 살펴보자.

```{r}
summary(impact$model$bsts.model)
```

추정된 모형의 R-square값이 0.53 정도였다.

모형을 개선하기 위한 방법으로, covariate을 추가하거나, 모델에 계절성을 추가하는 등의 방식을 생각해볼 수 있다.



### 계절성 추가

우선, 모델에 계절성을 추가해보자.

```{r}
impact_seasonal <- CausalImpact(sales_adj_zoo, pre_period, post_period, model.args = list(nseasons = 52))
```

```{r}
summary(impact_seasonal$model$bsts.model)
```

추정된 모형의 R-square값이 0.85로 앞서 추정한 모형보다 증가하였다.


```{r}
plot(impact_seasonal)
```

모델에 계절성을 추가했을 때, pre-period에서는 pointwise로 인과효과가 유의하게 나오는 시점이 없음을 볼 수 있다. 다만, post-period에서 treatment 기간 이후에도 효과가 유의하게 추정됨을 관찰할 수 있다.



## Test for control time series

Treatment가 주어지지 않은 time series에 대해 causal effect를 추정했을 때, causal effect가 나타나지 않아야 한다.

임의로 처치 효과를 더하기 전의 원 데이터를 사용하여 causal effect를 추정해보자.

```{r}
sales_org_wide <- 
  sales_adj |> 
  as_tibble() |> 
  pivot_wider(
    id_cols = Date,
    names_from = c(Store, Dept),
    names_prefix = "sales_",
    values_from = Weekly_Sales
  )

sales_org_zoo <- 
  sales_org_wide |> 
  select(sales_1_4, !Date) |> 
  zoo(order.by = sales_org_wide[["Date"]])

impact_org <- CausalImpact(sales_org_zoo, pre_period, post_period, model.args = list(nseasons = 52))

plot(impact_org)
```

결과를 살펴보면, 임의로 처치 효과를 추가하지 않은 데이터임에도 불구하고, post-treatment 구간의 causal effect가 유의하게 존재하는 것처럼 추정되었다. 

이는 해당 시계열과 covariate 시계열의 관계가 pre-treatment period와 post-treatment period간 차이가 있다는 점을 시사한다.


관심 시계열을 제외하고, 각 covariate에 대해 동일하게 causal effect를 추정해보자.

```{r}
impact_cov1 <- CausalImpact(sales_org_zoo[, 2:4], pre_period, post_period, model.args = list(nseasons = 52))
plot(impact_cov1)
```

```{r}
impact_cov2 <- CausalImpact(sales_org_zoo[, c(3, 2, 4)], pre_period, post_period, model.args = list(nseasons = 52))
plot(impact_cov2)
```

```{r}
impact_cov3 <- CausalImpact(sales_org_zoo[, c(4, 2, 3)], pre_period, post_period, model.args = list(nseasons = 52))
plot(impact_cov3)
```

Covariate의 시계열은 대체로 causal effect가 유의하지 않게, 기대했던대로 얻어진다. 다만, 계절적 요인을 잘 반영하지 못하며, 아마도 제한된 수의 covariate 때문에 posterior interval이 넓게 추정됨을 볼 수 있다.

다음 절에서는, 보다 많은 covariate을 이용하면 추정 정밀도 및 정확도가 어떻게 개선되는지 살펴보자.


## Increase number of covariates

원 데이터에는 총 3,331개의 시계열이 담겨 있다.

```{r}
sales_ts
```

이 중 하나의 시계열(Store: 1, Dept: 4)에 대해 앞에서와 같이 treatment 효과를 임의로 생성하고, 나머지 3,330개 시계열을 covariate으로 하여 처치 효과를 추정해보자. 단, covariate에 결측값이 존재하면 안 되므로, 결측값이 존재하는 시계열은 covariate에서 제외하자.

```{r}
sales_all <- 
  sales_ts |> 
  select(-IsHoliday)

sales_all_adj <- 
  sales_all |> 
  mutate(marketing_campaign = (Store == 1 & Dept == 4 & yearmonth(Date) == yearmonth("2012-03"))) |> 
  mutate(adj_sales = Weekly_Sales * (1 + 0.3 * marketing_campaign))

sales_all_adj_wide <- 
  sales_all_adj |> 
  as_tibble() |> 
  pivot_wider(
    id_cols = Date,
    names_from = c(Store, Dept),
    names_prefix = "sales_",
    values_from = adj_sales
  ) |> 
  select(where(\(x) !any(is.na(x))))

sales_all_adj_zoo <- 
  sales_all_adj_wide |> 
  select(sales_1_4, !Date) |> 
  zoo(order.by = sales_all_adj_wide[["Date"]])
```

결과적으로 약 2,660개 정도의 시계열이 covariate으로 사용된다. 많은 수의 covariate을 사용하므로, 그 중 관심 시계열과 동일한 계절성을 지닌 시계열이 있을 것이라 기대하고, 계절성 파라미터를 포함하지 않은 추정을 수행해보자.

```{r}
impact_all <- CausalImpact(sales_all_adj_zoo, pre_period, post_period)

plot(impact_all)
```

결과, 임의로 처치 효과를 추가한 2012년 3월에만 처치 효과가 유의하게 추정되었고, 그 이후의 기간에는 더 이상 누적 처치 효과가 증가하지 않는 것으로 추정되었다.

Synthetic control 모델의 회귀계수를 살펴보자.

```{r}
summary(impact_all$model$bsts.model)
```

다른 store의 같은 department(Dept: 4)의 판매 시계열이 가장 유용한 covariate인 것으로 보인다. R-square는 0.86 정도로, 앞서 적은 수의 covariate에 계절성을 추가하여 추정했던 모형과 크게 다르지 않으나 약간 개선되었다. 또한, one-step-ahead prediction error의 standard deviation이 감소했다.
